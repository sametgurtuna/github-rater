"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analyze/route";
exports.ids = ["app/api/analyze/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_samet_Desktop_github_rater_app_api_analyze_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/analyze/route.ts */ \"(rsc)/./app/api/analyze/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analyze/route\",\n        pathname: \"/api/analyze\",\n        filename: \"route\",\n        bundlePath: \"app/api/analyze/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\samet\\\\Desktop\\\\github-rater\\\\app\\\\api\\\\analyze\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_samet_Desktop_github_rater_app_api_analyze_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/analyze/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXplJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhbmFseXplJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGYW5hbHl6ZSUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNzYW1ldCU1Q0Rlc2t0b3AlNUNnaXRodWItcmF0ZXIlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q3NhbWV0JTVDRGVza3RvcCU1Q2dpdGh1Yi1yYXRlciZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDb0I7QUFDakc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9naXRodWItcHJvZmlsZS1hbmFseXplci8/YWJiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxzYW1ldFxcXFxEZXNrdG9wXFxcXGdpdGh1Yi1yYXRlclxcXFxhcHBcXFxcYXBpXFxcXGFuYWx5emVcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FuYWx5emUvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hbmFseXplXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hbmFseXplL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcc2FtZXRcXFxcRGVza3RvcFxcXFxnaXRodWItcmF0ZXJcXFxcYXBwXFxcXGFwaVxcXFxhbmFseXplXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbmFseXplL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/analyze/route.ts":
/*!**********************************!*\
  !*** ./app/api/analyze/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _services_github__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../services/github */ \"(rsc)/./services/github.ts\");\n\n\nasync function POST(request) {\n    try {\n        const { username } = await request.json();\n        if (!username || typeof username !== \"string\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Ge\\xe7erli bir kullanıcı adı gerekli\"\n            }, {\n                status: 400\n            });\n        }\n        const githubService = _services_github__WEBPACK_IMPORTED_MODULE_1__.GitHubService.getInstance();\n        const result = await githubService.analyzeProfile(username);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error(\"Analiz hatası:\", error);\n        if (error.message.includes(\"bulunamadı\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Kullanıcı bulunamadı\"\n            }, {\n                status: 404\n            });\n        }\n        if (error.message.includes(\"Rate limit\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"API rate limit aşıldı. L\\xfctfen daha sonra tekrar deneyin.\"\n            }, {\n                status: 429\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Sunucu hatası: \" + error.message\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2FuYWx5emUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXdEO0FBQ0M7QUFFbEQsZUFBZUUsS0FBS0MsT0FBb0I7SUFDN0MsSUFBSTtRQUNGLE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUcsTUFBTUQsUUFBUUUsSUFBSTtRQUV2QyxJQUFJLENBQUNELFlBQVksT0FBT0EsYUFBYSxVQUFVO1lBQzdDLE9BQU9KLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO1lBQW9DLEdBQzdDO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSxNQUFNQyxnQkFBZ0JQLDJEQUFhQSxDQUFDUSxXQUFXO1FBQy9DLE1BQU1DLFNBQVMsTUFBTUYsY0FBY0csY0FBYyxDQUFDUDtRQUVsRCxPQUFPSixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDSztJQUMzQixFQUFFLE9BQU9KLE9BQVk7UUFDbkJNLFFBQVFOLEtBQUssQ0FBQyxrQkFBa0JBO1FBRWhDLElBQUlBLE1BQU1PLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGVBQWU7WUFDeEMsT0FBT2QscURBQVlBLENBQUNLLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBdUIsR0FDaEM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLElBQUlELE1BQU1PLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGVBQWU7WUFDeEMsT0FBT2QscURBQVlBLENBQUNLLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBMkQsR0FDcEU7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLE9BQU9QLHFEQUFZQSxDQUFDSyxJQUFJLENBQ3RCO1lBQUVDLE9BQU8sb0JBQW9CQSxNQUFNTyxPQUFPO1FBQUMsR0FDM0M7WUFBRU4sUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9naXRodWItcHJvZmlsZS1hbmFseXplci8uL2FwcC9hcGkvYW5hbHl6ZS9yb3V0ZS50cz80NmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB7IEdpdEh1YlNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi9zZXJ2aWNlcy9naXRodWInO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyB1c2VybmFtZSB9ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XHJcblxyXG4gICAgaWYgKCF1c2VybmFtZSB8fCB0eXBlb2YgdXNlcm5hbWUgIT09ICdzdHJpbmcnKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnR2XDp2VybGkgYmlyIGt1bGxhbsSxY8SxIGFkxLEgZ2VyZWtsaScgfSxcclxuICAgICAgICB7IHN0YXR1czogNDAwIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBnaXRodWJTZXJ2aWNlID0gR2l0SHViU2VydmljZS5nZXRJbnN0YW5jZSgpO1xyXG4gICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZ2l0aHViU2VydmljZS5hbmFseXplUHJvZmlsZSh1c2VybmFtZSk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHJlc3VsdCk7XHJcbiAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xyXG4gICAgY29uc29sZS5lcnJvcignQW5hbGl6IGhhdGFzxLE6JywgZXJyb3IpO1xyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnYnVsdW5hbWFkxLEnKSkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ0t1bGxhbsSxY8SxIGJ1bHVuYW1hZMSxJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBpZiAoZXJyb3IubWVzc2FnZS5pbmNsdWRlcygnUmF0ZSBsaW1pdCcpKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnQVBJIHJhdGUgbGltaXQgYcWfxLFsZMSxLiBMw7x0ZmVuIGRhaGEgc29ucmEgdGVrcmFyIGRlbmV5aW4uJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MjkgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgeyBlcnJvcjogJ1N1bnVjdSBoYXRhc8SxOiAnICsgZXJyb3IubWVzc2FnZSB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJHaXRIdWJTZXJ2aWNlIiwiUE9TVCIsInJlcXVlc3QiLCJ1c2VybmFtZSIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsImdpdGh1YlNlcnZpY2UiLCJnZXRJbnN0YW5jZSIsInJlc3VsdCIsImFuYWx5emVQcm9maWxlIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/analyze/route.ts\n");

/***/ }),

/***/ "(rsc)/./services/github.ts":
/*!****************************!*\
  !*** ./services/github.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GitHubService: () => (/* binding */ GitHubService)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(rsc)/./node_modules/axios/lib/axios.js\");\n\nconst GITHUB_API_BASE = \"https://api.github.com\";\nclass GitHubService {\n    constructor(){\n        this.rateLimitRemaining = 60;\n        this.rateLimitReset = 0;\n    }\n    static getInstance() {\n        if (!GitHubService.instance) {\n            GitHubService.instance = new GitHubService();\n        }\n        return GitHubService.instance;\n    }\n    async makeRequest(endpoint) {\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(`${GITHUB_API_BASE}${endpoint}`, {\n                headers: {\n                    \"Accept\": \"application/vnd.github.v3+json\",\n                    \"User-Agent\": \"GitHub-Profile-Analyzer\"\n                }\n            });\n            // Rate limit bilgilerini güncelle\n            this.rateLimitRemaining = parseInt(response.headers[\"x-ratelimit-remaining\"] || \"0\");\n            this.rateLimitReset = parseInt(response.headers[\"x-ratelimit-reset\"] || \"0\");\n            return response.data;\n        } catch (error) {\n            if (error.response?.status === 404) {\n                throw new Error(\"User not found\");\n            }\n            if (error.response?.status === 403) {\n                throw new Error(\"Rate limit exceeded. Please try again later.\");\n            }\n            throw new Error(\"GitHub API error: \" + error.message);\n        }\n    }\n    async getUser(username) {\n        return this.makeRequest(`/users/${username}`);\n    }\n    async getUserRepos(username) {\n        return this.makeRequest(`/users/${username}/repos?sort=updated&per_page=100`);\n    }\n    async analyzeProfile(username) {\n        const [user, repos] = await Promise.all([\n            this.getUser(username),\n            this.getUserRepos(username)\n        ]);\n        const score = this.calculateAdvancedScore(user, repos);\n        const insights = this.generateAdvancedInsights(user, repos, score);\n        const recommendations = this.generateAdvancedRecommendations(user, repos, score);\n        return {\n            user,\n            repos,\n            score,\n            insights,\n            recommendations\n        };\n    }\n    calculateAdvancedScore(user, repos) {\n        // Enhanced Activity Score (Account age, update frequency, consistency)\n        const accountAge = (Date.now() - new Date(user.created_at).getTime()) / (1000 * 60 * 60 * 24 * 365);\n        const lastUpdate = (Date.now() - new Date(user.updated_at).getTime()) / (1000 * 60 * 60 * 24);\n        // Calculate activity consistency\n        const recentRepos = repos.filter((repo)=>{\n            const repoAge = (Date.now() - new Date(repo.updated_at).getTime()) / (1000 * 60 * 60 * 24);\n            return repoAge <= 90; // Last 3 months\n        });\n        const activityScore = Math.min(100, Math.max(0, Math.min(accountAge * 8, 40) + // Account age (max 40 points)\n        Math.max(0, 60 - lastUpdate) * 0.8 + // Recent activity (max 60 points)\n        recentRepos.length * 2 + // Active repos\n        user.public_repos * 0.5 // Total repos bonus\n        ));\n        // Enhanced Contribution Score (Repo quality, forks, community impact)\n        const totalForks = repos.reduce((sum, repo)=>sum + repo.forks_count, 0);\n        const totalWatchers = repos.reduce((sum, repo)=>sum + repo.watchers_count, 0);\n        const originalRepos = repos.filter((r)=>!r.fork);\n        const forkedRepos = repos.filter((r)=>r.fork);\n        const contributionScore = Math.min(100, Math.max(0, originalRepos.length * 4 + // Original repos (max 40 points)\n        totalForks * 1.5 + // Fork impact (max 30 points)\n        totalWatchers * 0.8 + // Watcher engagement (max 20 points)\n        user.public_gists * 0.5 + // Gists contribution\n        forkedRepos.length * 0.3 // Fork participation\n        ));\n        // Enhanced Popularity Score (Followers, stars, social proof)\n        const totalStars = repos.reduce((sum, repo)=>sum + repo.stargazers_count, 0);\n        const avgStarsPerRepo = repos.length > 0 ? totalStars / repos.length : 0;\n        const followerRatio = user.followers / Math.max(user.following, 1);\n        const popularityScore = Math.min(100, Math.max(0, Math.min(user.followers * 0.8, 40) + // Followers (max 40 points)\n        Math.min(totalStars * 0.6, 30) + // Total stars (max 30 points)\n        Math.min(avgStarsPerRepo * 10, 20) + // Average stars per repo (max 20 points)\n        Math.min(followerRatio * 20, 10) // Follower/following ratio (max 10 points)\n        ));\n        // Enhanced Quality Score (Documentation, features, professionalism)\n        const reposWithDescription = repos.filter((r)=>r.description && r.description.length > 10);\n        const reposWithWiki = repos.filter((r)=>r.has_wiki);\n        const reposWithPages = repos.filter((r)=>r.has_pages);\n        const reposWithLicense = repos.filter((r)=>r.license);\n        const reposWithIssues = repos.filter((r)=>r.has_issues);\n        const reposWithDiscussions = repos.filter((r)=>r.has_discussions);\n        const qualityScore = Math.min(100, Math.max(0, reposWithDescription.length * 3 + // Good descriptions (max 30 points)\n        reposWithWiki.length * 2 + // Wikis (max 20 points)\n        reposWithPages.length * 3 + // GitHub Pages (max 20 points)\n        reposWithLicense.length * 4 + // Licenses (max 20 points)\n        reposWithIssues.length * 1 + // Issue tracking (max 10 points)\n        reposWithDiscussions.length * 2 // Discussions (max 10 points)\n        ));\n        // Enhanced Diversity Score (Languages, topics, project types)\n        const languages = new Set(repos.map((r)=>r.language).filter(Boolean));\n        const topics = new Set(repos.flatMap((r)=>r.topics || []));\n        const projectTypes = new Set();\n        repos.forEach((repo)=>{\n            if (repo.is_template) projectTypes.add(\"template\");\n            if (repo.archived) projectTypes.add(\"archived\");\n            if (repo.disabled) projectTypes.add(\"disabled\");\n            if (repo.mirror_url) projectTypes.add(\"mirror\");\n        });\n        const diversityScore = Math.min(100, Math.max(0, Math.min(languages.size * 8, 40) + // Language diversity (max 40 points)\n        Math.min(topics.size * 3, 30) + // Topic diversity (max 30 points)\n        Math.min(projectTypes.size * 5, 20) + // Project type diversity (max 20 points)\n        originalRepos.length * 0.5 + // Original content bonus\n        Math.min(repos.length / 10, 10) // Repository count bonus (max 10 points)\n        ));\n        // Advanced Overall Score with dynamic weighting\n        const weights = this.calculateDynamicWeights(user, repos);\n        const overallScore = Math.round(activityScore * weights.activity + contributionScore * weights.contribution + popularityScore * weights.popularity + qualityScore * weights.quality + diversityScore * weights.diversity);\n        return {\n            overall: overallScore,\n            activity: Math.round(activityScore),\n            contribution: Math.round(contributionScore),\n            popularity: Math.round(popularityScore),\n            quality: Math.round(qualityScore),\n            diversity: Math.round(diversityScore)\n        };\n    }\n    calculateDynamicWeights(user, repos) {\n        // Dynamic weighting based on profile characteristics\n        const totalRepos = repos.length;\n        const accountAge = (Date.now() - new Date(user.created_at).getTime()) / (1000 * 60 * 60 * 24 * 365);\n        let weights = {\n            activity: 0.2,\n            contribution: 0.25,\n            popularity: 0.2,\n            quality: 0.2,\n            diversity: 0.15\n        };\n        // Adjust weights based on profile maturity\n        if (accountAge > 5) {\n            // Mature accounts: emphasize quality and contribution\n            weights.quality = 0.25;\n            weights.contribution = 0.3;\n            weights.activity = 0.15;\n        } else if (accountAge < 1) {\n            // New accounts: emphasize activity and potential\n            weights.activity = 0.3;\n            weights.contribution = 0.2;\n            weights.quality = 0.15;\n        }\n        // Adjust weights based on repository count\n        if (totalRepos > 50) {\n            // High repo count: emphasize quality and diversity\n            weights.quality = 0.25;\n            weights.diversity = 0.2;\n            weights.contribution = 0.2;\n        } else if (totalRepos < 10) {\n            // Low repo count: emphasize activity and contribution\n            weights.activity = 0.25;\n            weights.contribution = 0.3;\n            weights.diversity = 0.1;\n        }\n        return weights;\n    }\n    generateAdvancedInsights(user, repos, score) {\n        const insights = [];\n        // Score-based insights\n        if (score.activity > 85) insights.push(\"Exceptional activity level! You maintain a very active development profile.\");\n        else if (score.activity > 70) insights.push(\"High activity level with consistent project updates.\");\n        if (score.contribution > 85) insights.push(\"Outstanding community contribution! Your projects have significant impact.\");\n        else if (score.contribution > 70) insights.push(\"Strong contribution to the open source community.\");\n        if (score.popularity > 85) insights.push(\"Highly popular profile with strong social proof and recognition.\");\n        else if (score.popularity > 70) insights.push(\"Good popularity with growing community engagement.\");\n        if (score.quality > 85) insights.push(\"Excellent project quality with professional documentation and features.\");\n        else if (score.quality > 70) insights.push(\"High quality projects with good documentation practices.\");\n        if (score.diversity > 85) insights.push(\"Impressive technical diversity across multiple domains and technologies.\");\n        else if (score.diversity > 70) insights.push(\"Good technical diversity showing versatility.\");\n        // Profile completeness insights\n        if (user.bio && user.bio.length > 50) insights.push(\"Professional bio with detailed information.\");\n        if (user.blog) insights.push(\"Personal website/blog link enhances professional presence.\");\n        if (user.location) insights.push(\"Location information helps with local opportunities.\");\n        if (user.hireable) insights.push(\"Open to job opportunities - great for career growth.\");\n        if (user.company) insights.push(\"Company affiliation shows professional background.\");\n        // Repository insights\n        const languages = new Set(repos.map((r)=>r.language).filter(Boolean));\n        if (languages.size > 8) insights.push(`Expert in ${languages.size} programming languages.`);\n        else if (languages.size > 5) insights.push(`Skilled in ${languages.size} programming languages.`);\n        const totalStars = repos.reduce((sum, repo)=>sum + repo.stargazers_count, 0);\n        if (totalStars > 1000) insights.push(`Star power: ${totalStars.toLocaleString()} total stars across projects.`);\n        else if (totalStars > 100) insights.push(`Recognition: ${totalStars} total stars received.`);\n        const originalRepos = repos.filter((r)=>!r.fork);\n        if (originalRepos.length > repos.length * 0.8) insights.push(\"High ratio of original projects vs forks.\");\n        // Activity insights\n        const recentActivity = repos.filter((r)=>{\n            const daysSinceUpdate = (Date.now() - new Date(r.updated_at).getTime()) / (1000 * 60 * 60 * 24);\n            return daysSinceUpdate <= 30;\n        });\n        if (recentActivity.length > repos.length * 0.3) insights.push(\"Maintains active project updates.\");\n        return insights;\n    }\n    generateAdvancedRecommendations(user, repos, score) {\n        const recommendations = [];\n        // Profile completeness recommendations\n        if (!user.bio || user.bio.length < 30) {\n            recommendations.push(\"Add a comprehensive bio (50+ characters) to showcase your expertise and interests.\");\n        }\n        if (!user.blog) {\n            recommendations.push(\"Create a personal website or blog to showcase your portfolio and thoughts.\");\n        }\n        if (!user.location) {\n            recommendations.push(\"Add location information to connect with local opportunities and communities.\");\n        }\n        if (!user.hireable) {\n            recommendations.push(\"Mark yourself as available for hire to attract career opportunities.\");\n        }\n        // Score-based recommendations\n        if (score.activity < 60) {\n            recommendations.push(\"Increase activity: commit more frequently and update projects regularly.\");\n            recommendations.push(\"Consider setting up automated workflows to maintain consistent activity.\");\n        }\n        if (score.contribution < 60) {\n            recommendations.push(\"Contribute more to open source: fork projects and submit pull requests.\");\n            recommendations.push(\"Create original projects that solve real problems.\");\n        }\n        if (score.popularity < 60) {\n            recommendations.push(\"Engage with the community: follow other developers and participate in discussions.\");\n            recommendations.push(\"Promote your projects on social media and developer platforms.\");\n        }\n        if (score.quality < 60) {\n            recommendations.push(\"Improve project quality: add comprehensive README files and documentation.\");\n            recommendations.push(\"Include proper licensing, issue templates, and contribution guidelines.\");\n        }\n        if (score.diversity < 60) {\n            recommendations.push(\"Expand technical skills: work with different programming languages and frameworks.\");\n            recommendations.push(\"Add topics to your repositories to improve discoverability.\");\n        }\n        // Specific improvement suggestions\n        const languages = new Set(repos.map((r)=>r.language).filter(Boolean));\n        if (languages.size < 3) {\n            recommendations.push(\"Diversify your tech stack by working with at least 3 different programming languages.\");\n        }\n        const topics = new Set(repos.flatMap((r)=>r.topics || []));\n        if (topics.size < 8) {\n            recommendations.push(\"Add more topics to repositories (aim for 8+ topics) to improve discoverability.\");\n        }\n        const reposWithDescription = repos.filter((r)=>r.description && r.description.length > 20);\n        if (reposWithDescription.length < repos.length * 0.7) {\n            recommendations.push(\"Add detailed descriptions to 70%+ of your repositories.\");\n        }\n        const reposWithLicense = repos.filter((r)=>r.license);\n        if (reposWithLicense.length < repos.length * 0.5) {\n            recommendations.push(\"Add licenses to at least 50% of your repositories for better open source contribution.\");\n        }\n        // Advanced recommendations\n        if (repos.length < 10) {\n            recommendations.push(\"Build more projects to showcase your skills and experience.\");\n        }\n        const archivedRepos = repos.filter((r)=>r.archived);\n        if (archivedRepos.length > repos.length * 0.3) {\n            recommendations.push(\"Consider cleaning up or updating archived repositories to maintain an active profile.\");\n        }\n        return recommendations;\n    }\n    getRateLimitInfo() {\n        return {\n            remaining: this.rateLimitRemaining,\n            reset: this.rateLimitReset\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./services/github.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/axios","vendor-chunks/asynckit","vendor-chunks/math-intrinsics","vendor-chunks/es-errors","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/get-proto","vendor-chunks/mime-db","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/function-bind","vendor-chunks/form-data","vendor-chunks/follow-redirects","vendor-chunks/supports-color","vendor-chunks/proxy-from-env","vendor-chunks/ms","vendor-chunks/mime-types","vendor-chunks/hasown","vendor-chunks/has-tostringtag","vendor-chunks/has-flag","vendor-chunks/get-intrinsic","vendor-chunks/es-set-tostringtag","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/delayed-stream","vendor-chunks/combined-stream"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalyze%2Froute&page=%2Fapi%2Fanalyze%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalyze%2Froute.ts&appDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Csamet%5CDesktop%5Cgithub-rater&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();